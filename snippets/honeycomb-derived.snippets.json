{
    "IF Statement": {
        "prefix":"IF",
        "body": "IF(${1:condition},${2:then-val}${3| ,\\,else-val|})",
        "description" : "IF( condition, then-val [, condition2, then-val2]... [, else-val])"
    },
    "COALESCE Statement": {
        "prefix":"COALESCE",
        "body": "COALESCE($1, $2)",
        "description" : "COALESCE(arg1, arg2, ...)"
    },
    "Less Than": {
        "prefix":"LT",
        "body": "LT($1,$2)",
        "description" : "LT(left, right)"
    },
    "Greater Than": {
        "prefix":"LTE",
        "body": "LTE($1,$2)",
        "description" : "LTE(left, right)"
    },
    "Less Than Equal": {
        "prefix":"GT",
        "body": "GT($1,$2)",
        "description" : "GT(left,right)"
    },
    "Greater Than Equal": {
        "prefix":"GTE",
        "body": "GTE($1,$2)",
        "description" : "GTE(left,right)"
    },
    "Equals": {
        "prefix":"EQUALS",
        "body": "EQUALS($1,$2)",
        "description" : "EQUALS(arg1,arg2)"
    },
    "IN": {
        "prefix":"IN",
        "body": "IN($1,$2)",
        "description" : "IN(arg1, compare1, ...)"
    },
    "EXISTS": {
        "prefix":"EXISTS",
        "body": "EXISTS($1)",
        "description" : "EXISTS(arg1)"
    },
    "AND": {
        "prefix":"AND",
        "body": "AND($1,$2)",
        "description" : "AND(arg1, arg2, ...)"
    },    
    "OR": {
        "prefix":"OR",
        "body": "OR($1,$2)",
        "description" : "OR(arg1, arg2, ...)"
    },
    "MIN": {
        "prefix":"MIN",
        "body": "MIN($1,$2)",
        "description" : "MIN(arg1, arg2, ...)"
    },
    "MAX": {
        "prefix":"MAX",
        "body": "MAX($1,$2)",
        "description" : "MAX(arg1, arg2, ...)"
    },
    "SUM": {
        "prefix":"SUM",
        "body": "SUM($1,$2)",
        "description" : "SUM(arg1, arg2, ...)"
    },
    "SUB": {
        "prefix":"SUB",
        "body": "SUB($1,$2)",
        "description" : "SUB(arg1, arg2)"
    },
    "MUL": {
        "prefix":"MUL",
        "body": "MUL($1,$2)",
        "description" : "MUL(arg1, arg2, ...)"
    },
    "DIV": {
        "prefix":"DIV", 
        "body": "DIV(${1:arg1},${2:arg2})",
        "description" : "DIV(arg1, arg2)"
    },
    "LOG10": {
        "prefix":"LOG10",
        "body": "LOG10($1)",
        "description" : "LOG10(arg1)"
    },
    "BUCKET": {
        "prefix":"BUCKET",
        "body": "BUCKET(\\$column, size${1| ,\\,min,\\,min\\,max|})",
        "description" : "BUCKET( $column, size, [min, [max]])"
    },
    "INT": {
        "prefix":"INT",
        "body": "INT($1)",
        "description" : "INT(arg1)"
    },
    "FLOAT": {
        "prefix":"FLOAT",
        "body": "FLOAT($1)",
        "description" : "FLOAT(arg1)"
    },
    "BOOL": {
        "prefix":"BOOL",
        "body": "BOOL($1)",
        "description" : "BOOL(arg1)"
    },
    "STRING": {
        "prefix":"STRING",
        "body": "STRING($1)",
        "description" : "STRING(arg1)"
    },
    "CONCAT": {
        "prefix":"CONCAT",
        "body": "CONCAT($1, $2)",
        "description" : "CONCAT(arg1, arg2, ...)"
    },
    "STARTS_WITH": {
        "prefix":"STARTS_WITH",
        "body": "STARTS_WITH($1, $2)",
        "description" : "STARTS_WITH(string, prefix)"
    },
    "CONTAINS": {
        "prefix":"CONTAINS",
        "body": "CONTAINS($1, $2)",
        "description" : "CONTAINS(string, substr)"
    },
    "REG_MATCH": {
        "prefix":"REG_MATCH",
        "body": "REG_MATCH($1, $2)",
        "description" : "REG_MATCH(string, regex) [GOLANG REGEX]"
    },
    "REG_VALUE": {
        "prefix":"REG_VALUE",
        "body": "REG_VALUE($1, $2)",
        "description" : "REG_VALUE(string, regex) [GOLANG REGEX]"
    },
    "REG_COUNT": {
        "prefix":"REG_COUNT",
        "body": "REG_COUNT(${1:string}, $2)",
        "description" : "REG_COUNT(string, regex) [GOLANG REGEX]"
    },
    "UNIX_TIMESTAMP": {
        "prefix":"UNIX_TIMESTAMP",
        "body": "UNIX_TIMESTAMP($1)",
        "description" : "UNIX_TIMESTAMP(string)"
    },
    "EVENT_TIMESTAMP": {
        "prefix":"EVENT_TIMESTAMP",
        "body": "EVENT_TIMESTAMP()",
        "description" : "EVENT_TIMESTAMP()"
    }
}
